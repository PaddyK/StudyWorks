<?xml version="1.0"?>
	<project name="StudyWorks" default="build_execute" basedir=".">
		<property environment="env"/>
		<property name="build.dir" value="build"/>
		<property name="target.release" value="1.7"/>
		<property name="source.release" value="1.7" />
		
		<path id="external_jars">
			<fileset dir="lib">
				<include name="*.jar"/>
			</fileset>
			<pathelement path="${build.dir}" />
			<pathelement path="${build.dir}/classification" />
			<pathelement path="${build.dir}/concurrent" />
			<pathelement path="${build.dir}/data" />
			<pathelement path="${build.dir}/main" />
		</path>
		
		<target name="build_main" depends="build_data,build_concurrent,build_classification,build_structure,build_parser"
			description="Compile files for StudyWorks project concurrent">
			<mkdir dir="${build.dir}"/>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="main" />
				<classpath refid="external_jars"/>
			</javac>
		</target>
		
		<target name="build_classification" description="Compile files for StudyWorks project concurrent">
			<mkdir dir="${build.dir}"/>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="classification" />
				<classpath refid="external_jars"/>
			</javac>
		</target>
		
		<target name="build_concurrent" depends="build_data" description="Compiles package concurrent">
			<mkdir dir="${build.dir}"/>
			<javac destdir="${build.dir}"  source="${source.release}" target="${target.release}">
				<src path="concurrent"/>
				<classpath refid="external_jars"/>
			</javac>
		</target>
		
		<target name="build_data" description="Compiling package data">
			<mkdir dir="${build.dir}"/>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="data"/>
				<classpath refid="external_jars"/>
			</javac>
		</target>
		
		<target name="build_structure" depends="build_concurrent" description="Compiling structure package">
			<mkdir dir="${build.dir}"/>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="structure"/>
				<classpath refid="external_jars"/>
			</javac>
		</target>
		
		<target name="build_grammar" depends="build_structure,build_parser" description="Creates ANTL Parser and Lexer">
			<mkdir dir="${build.dir}"/>
			<java jar="lib/antlr-4.2.2-complete.jar" fork="true">
				<arg value="-o" />
				<arg value="parser/common" />
				<arg value="-listener" />
				<arg value="-no-visitor" />
				<arg value="parser/simple.g4" />
			</java>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="parser/common" />
				<classpath refid="external_jars" />
			</javac>
		</target>
		
		<target name="build_grammar_only" description="Creates ANTL Parser and Lexer">
			<mkdir dir="${build.dir}"/>
			<java jar="lib/antlr-4.2.2-complete.jar" fork="true">
				<arg value="-o" />
				<arg value="parser/common" />
				<arg value="-listener" />
				<arg value="-no-visitor" />
				<arg value="parser/simple.g4" />
			</java>
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="parser/common" />
				<classpath refid="external_jars" />
			</javac>
		</target>
		
		<target name="build_parser" description="Compiling parser for configuration files">
			<mkdir dir="${build.dir}" />
			<javac destdir="${build.dir}" source="${source.release}" target="${target.release}">
				<src path="parser"/>
				<classpath refid="external_jars" />
			</javac>
		</target>
		
		<target name="clean">
			<delete>
				<fileset dir="${build.dir}">
					<include name="**/*.class"/>
				</fileset>
			</delete>
		</target>
		
		<target name="package" depends="build_main" description="create executable jar file">
			<jar destfile="StudyWorks_test.jar"
				basedir="${build.dir}">
				<fileset dir="${build.dir}" />
				<manifest>
					<attribute name="Main-Class" value="main.ConcurrentProgram"/>
					<attribute name="Class-Path" value="lib/antlr-4.2.2-complete.jar lib/weka.jar lib/mysql-connector.jar lib/LibSVM.jar lib/LibLINEAR.jar" />
				</manifest>
			</jar>
		</target>
		
		<target name="check_if_attributes_set">
			<condition property="isSetAttributes" value="true">
				<and>
					<isset property="config" />
					<isset property="loocvfile"/>
					<isset property="resultfile"/>
				</and>
			</condition>
		</target>
		
		<target name="execute" description="Run program" depends="check_if_attributes_set" if="isSetAttributes">
			<java jar="${basedir}/StudyWorks_test.jar" fork="true">
				<arg value="-XX:+HeapDumpOnOutOfMemoryError" />
				<arg value="-Xmx6144" />
				<arg value="-Xms4096" />
				<arg value="-config" />
				<arg value="${config}" />
				<arg value="-loocvfile" />
				<arg value="${loocvfile}" />
				<arg value="-resultfile" />
				<arg value="${resultfile}" />
			</java>
		</target>
		
		<target name="build_execute" depends="package" description="Run program">
			<java jar="${basedir}/StudyWorks_test.jar" fork="true">
				<arg value="-XX:+HeapDumpOnOutOfMemoryError" />
				<arg value="-Xmx6144" />
				<arg value="-Xms4096" />
				<arg value="-config" />
				<arg value="${config}" />
				<classpath>
					<pathelement location="${basedir}/lib/antlr-4.2.2-complete.jar"/>
					<pathelement location="${basedir}/lib/weka.jar" />
					<pathelement location="${basedir}/lib/mysql-connector.jar" />
					<pathelement location="${basedir}/lib/LibSVM.jar" />
					<pathelement location="${basedir}/lib/LibLINEAR.jar" />
				</classpath>
			</java>
		</target>
		
		<target name="debug" description="Run program">
			<java jar="${basedir}/StudyWorks_test.jar" fork="true">
				<arg value="-debug" />
				<arg value="-config" />
				<arg value="${config}" />
				<classpath>
					<pathelement location="${basedir}/lib/antlr-4.2.2-complete.jar"/>
					<pathelement location="${basedir}/lib/weka.jar" />
					<pathelement location="${basedir}/lib/mysql-connector.jar" />
					<pathelement location="${basedir}/lib/LibSVM.jar" />
					<pathelement location="${basedir}/lib/LibLINEAR.jar" />
				</classpath>
			</java>
		</target>
	</project>